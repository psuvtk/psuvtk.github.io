<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术的细节</title>
    <link>https://psuvtk.github.io/</link>
    <description>Recent content on 技术的细节</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 05 Apr 2022 19:20:45 +0800</lastBuildDate><atom:link href="https://psuvtk.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://psuvtk.github.io/about/</link>
      <pubDate>Tue, 05 Apr 2022 19:28:46 +0800</pubDate>
      
      <guid>https://psuvtk.github.io/about/</guid>
      <description>年龄 27
任职公司 华为技术有限公司
职位 软件开发工程师、系统工程师
语言 C\C++\Python
工作内容  202007~202109 RRU业务维测特性Owner, 熟悉维测相关机制实现; 202109~至今 启动与业务初始化SE, 负责从BSBC至业务启动全流程方案及设计; 熟悉安全启动全力全流程设计; 负责内核驱动编写与维护; 独立完成基于Arm Cortex-M4的BootLoader方案设计及代码实现;  </description>
    </item>
    
    <item>
      <title>Linux IO 函数</title>
      <link>https://psuvtk.github.io/posts/1.-linux_io_macro/</link>
      <pubDate>Tue, 05 Apr 2022 19:20:45 +0800</pubDate>
      
      <guid>https://psuvtk.github.io/posts/1.-linux_io_macro/</guid>
      <description>arch\arm64\include\asm\io.h
/* * Relaxed I/O memory access primitives. These follow the Device memory * ordering rules but do not guarantee any ordering relative to Normal memory * accesses. */ #define readb_relaxed(c)	({ u8 __r = __raw_readb(c); __r; }) #define readw_relaxed(c)	({ u16 __r = le16_to_cpu((__force __le16)__raw_readw(c)); __r; }) #define readl_relaxed(c)	({ u32 __r = le32_to_cpu((__force __le32)__raw_readl(c)); __r; }) #define readq_relaxed(c)	({ u64 __r = le64_to_cpu((__force __le64)__raw_readq(c)); __r; })  #define writeb_relaxed(v,c)	((void)__raw_writeb((v),(c))) #define writew_relaxed(v,c)	((void)__raw_writew((__force u16)cpu_to_le16(v),(c))) #define writel_relaxed(v,c)	((void)__raw_writel((__force u32)cpu_to_le32(v),(c))) #define writeq_relaxed(v,c)	((void)__raw_writeq((__force u64)cpu_to_le64(v),(c)))  /* * I/O memory access primitives.</description>
    </item>
    
  </channel>
</rss>
